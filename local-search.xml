<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2024/07/10/test/"/>
    <url>/2024/07/10/test/</url>
    
    <content type="html"><![CDATA[<p>测试用例</p><span id="more"></span><p>正文<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="参考资料1">[1]</span></a></sup></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><hr><div class="note note-success">            <p>文字 或者 <code>Markdown</code> 均可<br>可选便签： primary 紫&#x2F;secondary 灰&#x2F;success 绿&#x2F;danger 红&#x2F;warning 黄&#x2F;info 蓝&#x2F;light 黑</p>          </div><p class="note note-primary">标签</p><span class="label label-danger">text</span><p>可选 Label：primary紫&#x2F;default灰&#x2F;success绿&#x2F;danger红&#x2F;warning黄&#x2F;info蓝</p><p><span class="label label-primary">Label</span></p><div class="note note-warning">            <details><summary><b>点击查看详细推导</b></summary>Surprise!<p>Surprise!</p><p>Surprise!</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C++">cout &lt;&lt; <span class="hljs-string">&quot;hello&quot;</span> &lt;&lt; endl;<br></code></pre></td></tr></table></figure></details>          </div><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>参考资料1<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.baidu.com/">参考资料2</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>class</category>
      
    </categories>
    
    
    <tags>
      
      <tag>class</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/06/24/hello-world/"/>
    <url>/2024/06/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>记录个人网站的搭建。<br>本站基于 <a href="https://hexo.io/zh-cn/">Hexo</a> 和 <a href="https://github.com/">Github</a> 搭建，采用 <a href="https://hexo.fluid-dev.com/docs/">Fluid 主题</a>。</p><span id="more"></span><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h3 id="1、注册GitHub"><a href="#1、注册GitHub" class="headerlink" title="1、注册GitHub"></a>1、注册GitHub</h3><p>官网 <a href="https://github.com/">github</a></p><p>注册GitHub账号后，<code>New repository</code>创建仓库，仓库名必须取 <code>&lt;username&gt;.github.io</code>，<code>username</code>为github账号名，随后在浏览器中就可以访问域名：<code>https://&lt;username&gt;.github.io</code>。</p><h3 id="2、安装Node-js"><a href="#2、安装Node-js" class="headerlink" title="2、安装Node.js"></a>2、安装Node.js</h3><p>官网 <a href="https://nodejs.org/en/download/package-manager">nodejs.org</a></p><p>Current 与 LTS 的区别：Current版是指当前最新的版本，拥有新功能特性。LTS版是指长期支持版本，软件更新与安全和维护修复的时间很长，被认为是稳定的版本。选择LTS版本下载即可。</p><p>安装后 Win + R 打开运行窗口 cmd 命令行，输入 node -v 即可查看版本。</p><h3 id="3、安装Git"><a href="#3、安装Git" class="headerlink" title="3、安装Git"></a>3、安装Git</h3><p>官网 <a href="https://git-scm.com/downloads">git</a></p><p>选择合适 <strong>系统</strong> 与 <strong>版本</strong>，安装时按照默认配置即可，其中有个 <strong>终端模拟器</strong> 选项，<code>Use MinTTY</code> 可以选择上。意思是：使用MinTTY（MSYS2的默认终端），Git Bash将使用MinTTY作为终端模拟器。</p><p>安装成功后，鼠标右键 菜单里多了 <code>Git GUI Here</code> 和 <code>Git Bash Here</code>，点击 <strong>Git Bash Here</strong> 调出命令行，配置 Git 个人基本信息（绑定 GitHub）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;username&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your mail&quot;</span><br></code></pre></td></tr></table></figure><p>将 <strong>username</strong> 替换为自己的 <strong>github</strong> 账号名，将 <strong>your mail</strong> 替换为自己注册 <strong>github</strong> 时绑定的邮箱。这一步非常重要。</p><h3 id="4、配置-GitHub-SSH"><a href="#4、配置-GitHub-SSH" class="headerlink" title="4、配置 GitHub SSH"></a>4、配置 GitHub SSH</h3><p>该步骤旨在建立当前主机与 GitHub 的安全连接，以后提交&#x2F;拉取仓库才不需要重复输入密码。</p><p>如果你这台主机已经建立过 SSH 连接，那么可以跳过这一步。</p><p>打开 <strong>Git Bash Here</strong>，输入命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;your mail&quot;</span><br></code></pre></td></tr></table></figure><p>获取 SSH Key 完成后，在提示路径下找到 <code>.ssh</code> 文件夹中的 <code>id_rsa.pub</code> 公钥文件，用记事本打开拷贝。</p><p>在 <code>GitHub</code> <code>Settings</code>中，找到 <a href="https://github.com/settings/keys">SSH</a>，<code>New SSH key</code> 新建key，将刚才复制的内容粘贴在文本框中。</p><p>配置后测试是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>出现<code>Hi &lt;username&gt;! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>表示配置成功</p><h3 id="5、安装-Hexo"><a href="#5、安装-Hexo" class="headerlink" title="5、安装 Hexo"></a>5、安装 Hexo</h3><p>官网 <a href="https://hexo.io/zh-cn/">hexo.io</a></p><p>在电脑中新建 <code>Blog</code> 文件夹，如 <code>D:\Blog</code> </p><p>在 cmd 命令行打开 D 盘，用 cd Blog命令进入 Blog 子目录，或者在文件夹路径栏直接输入 cmd。</p><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo，输入安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>输入初始化命令  <code>&lt;folder&gt;</code>替换成文件夹名称，也可以与 <code>github</code> 账号名一致，以我为例，我想要在<code>Blog</code>文件夹下新建一个<code>Guan-New</code>文件夹以存放站点文件，那么我这里的代码就应该是：<code>hexo init Guan-New</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init &lt;folder&gt;<br></code></pre></td></tr></table></figure><p>即可在 Blog 目录下新建 <strong>博客文件夹</strong> <code>Guan-New</code> 。用 <code>cd Guan-New</code> 命令进入博客子目录。</p><p>安装所有依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install<br></code></pre></td></tr></table></figure><p>生成本地预览命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><p>默认会生成 <code>localhost:4000</code> 端口的网址，在浏览器中可以访问。</p><h3 id="6、将-Hexo-发布至-GitHub"><a href="#6、将-Hexo-发布至-GitHub" class="headerlink" title="6、将 Hexo 发布至 GitHub"></a>6、将 Hexo 发布至 GitHub</h3><p>打开站点文件夹下  <code>_config.yml</code>   配置文件，更改基础配置。详细的配置描述可查看<a href="https://hexo.io/zh-cn/docs/configuration">站点配置</a> 。</p><ul><li><code># Site</code> <em>网站部分</em>  站点描述可自行修改</li><li><code># URL</code> <em>网址部分</em> <code>url</code> 将链接改为 <code>https://&lt;username&gt;.github.io</code> </li><li><code># Deployment</code> <em>部分</em><br><code>repo</code> 目标存储库的 URL， <code>branch</code> 分支名称。以我为例：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br>deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://github.com/Guan-New/Guan-New.github.io.git<br>  branch: master<br></code></pre></td></tr></table></figure><p>安装 <strong>hexo-deployer-git</strong>，在 <strong>Git Bash Here</strong> 下输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>依次输入 <strong>清理缓存文件</strong>，<strong>生成静态文件</strong>，<strong>部署到远程仓库</strong> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo cl<br>hexo g<br>hexo d <span class="hljs-comment"># 安装了 hexo-deployer-git 才能使用</span><br></code></pre></td></tr></table></figure><p>初次使用该操作可能会弹出一个 GitHub 登录界面，用于当前主机的身份验证。</p><p>稍等片刻，在浏览器中访问 <a href="https://guan-new.github.io/">https://Guan-New.github.io</a> 便可查看站点。</p><p><strong>PS：</strong>介绍一下常用的 Hexo 命令：</p><p> <code>hexo cl</code> || <code>hexo clean</code>    -&gt;  清除缓存文件和已生成的静态文件<br> <code>hexo g</code> || <code>hexo generate</code>    -&gt;  生成静态文件<br> <code>hexo d</code> || <code>hexo deploy</code>    -&gt;  提交到远程仓库，部署网站<br> <code>hexo s</code> || <code>hexo server</code>    -&gt;  启动服务，本地访问 <code>http://localhost:4000/</code></p><h2 id="Fluid主题"><a href="#Fluid主题" class="headerlink" title="Fluid主题"></a>Fluid主题</h2><p>本站采用的是 <a href="https://hexo.fluid-dev.com/docs/start/">Fluid 主题</a>，该主题的配置介绍可查阅 <a href="https://hexo.fluid-dev.com/docs/guide/">配置指南</a>。</p><p>额外配置，可查看大佬的 <a href="https://hwcoder.top/Hexo-Configuration">Hwcoder</a></p><p>给博客文章嵌入 <a href="https://hexo.fluid-dev.com/posts/hexo-nodeppt/">PPT演示</a></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
